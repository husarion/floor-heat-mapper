# Quick Start
# $ docker compose -f compose.rosbot.yaml up

services:

  rplidar:
    image: husarion/rplidar:galactic
    restart: unless-stopped
    devices:
      - /dev/ttyUSB0
    command: >
      ros2 launch rplidar_ros2 rplidar_launch.py

  nav2:
    image: husarion/navigation2:galactic
    restart: unless-stopped
    volumes:
      - ./config/nav2_params.yaml:/nav2_params.yaml
    command: >
      ros2 launch nav2_bringup navigation_launch.py
        params_file:=/nav2_params.yaml

  slam-toolbox:
    image: husarion/slam-toolbox:galactic
    restart: unless-stopped
    container_name: slam-toolbox
    volumes:
      - ./config/slam_params.yaml:/slam_params.yaml
      - ./maps:/maps
    command: >
      ros2 launch slam_toolbox online_sync_launch.py
        slam_params_file:=/slam_params.yaml

  bridge:
    image: husarion/ros:galactic-ros1-bridge
    restart: unless-stopped
    environment:
      - ROS_MASTER_URI=http://ros-master:11311
    command: >
      ros2 run ros1_bridge dynamic_bridge

  ros-master:
    image: ros:noetic-ros-core
    restart: unless-stopped
    command: stdbuf -o L roscore

  rosbot:
    image: husarion/rosbot:melodic
    restart: unless-stopped
    devices:
      - ${SERIAL_PORT}
    environment:
      - SERIAL_PORT
      - ROS_MASTER_URI=http://ros-master:11311
    command: >
      roslaunch --wait rosbot_bringup rosbot_docker.launch

  micro-ros-agent:
    network_mode: service:husarnet-rosbot
    image: microros/micro-ros-agent:humble
    command: serial --dev /dev/ttyACM0 -v6
    devices:
      - /dev/ttyACM0